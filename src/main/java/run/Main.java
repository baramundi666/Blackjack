package run;

import model.Card;
import model.Deck;
import model.basic.Suit;
import model.basic.Value;
import model.round.ConsoleRound;
import strategy.AnyStrategy;
import strategy.BasicStrategy;
import strategy.CardCounter;
import strategy.PatternReader;

import java.io.IOException;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        //runConsole();
        runSimulation();
        //runTest();
    }

    private static void runTest() {
        var two = new Card(Value.TWO, Suit.CLUB);
        var three = new Card(Value.THREE, Suit.CLUB);
        var four = new Card(Value.FOUR, Suit.CLUB);
        var five = new Card(Value.FIVE, Suit.CLUB);
        var six = new Card(Value.SIX, Suit.CLUB);
        var seven = new Card(Value.SEVEN, Suit.CLUB);
        var eight = new Card(Value.EIGHT, Suit.CLUB);
        var nine = new Card(Value.NINE, Suit.CLUB);
        var ten = new Card(Value.TEN, Suit.CLUB);
        var ace = new Card(Value.ACE, Suit.CLUB);

        var playerCards = List.of(eight, eight);
        var dealerCard = ten;

        var patternReader = new PatternReader();
        var strategy = new AnyStrategy(patternReader.readPattern(newPattern));
        int deckSize = 6;
        var testSimulation = new TestSimulation(strategy, deckSize,
                1000000, playerCards, dealerCard);
        testSimulation.start();
    }

    private static void runConsole() {
        var deck = new Deck(6);
        var round = new ConsoleRound(1, deck);
        try {
            round.play();
        } catch (IOException | IllegalStateException e) {
            throw new RuntimeException(e);
        }
        //Empty constructor for "Basic Strategy"
        var basicStrategy = new BasicStrategy();
        basicStrategy.InitializeStrategy();
    }

    private static void runSimulation() {
        int deckSize = 6;
        var patternReader = new PatternReader();
        var newStrategy = new AnyStrategy(patternReader.readPattern(newPattern));
        var simulation = new Simulation(newStrategy, deckSize, 100000000);
        simulation.start();
    }

    private static final String[][] newPattern = {
            // 2     3     4     5     6     7     8     9    10     A
            {"H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0"}, //5
            {"H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0"}, //6
            {"H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0"}, //7
            {"H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0"}, //8
            {"H-0","D-0","D-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //9
            {"D-0","D-0","D-0","D-0","D-0","D-0","D-0","D-0","H-0","H-0"}, //10
            {"D-0","D-0","D-0","D-0","D-0","D-0","D-0","D-0","D-0","H-0"}, //11
            {"H-0","H-0","S-0","S-0","S-0","H-0","H-0","H-0","H-0","H-0"}, //12
            {"S-0","S-0","S-0","S-0","S-0","H-0","H-0","H-0","H-0","H-0"}, //13
            {"S-0","S-0","S-0","S-0","S-0","H-0","H-0","H-0","H-0","H-0"}, //14
            {"S-0","S-0","S-0","S-0","S-0","H-0","H-0","H-0","U-0","U-0"}, //15
            {"S-0","S-0","S-0","S-0","S-0","H-0","H-0","U-0","U-0","U-0"}, //16
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","U-0"}, //17
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //18
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //19
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //20
            {"H-0","H-0","H-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-2
            {"H-0","H-0","H-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-3
            {"H-0","H-0","D-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-4
            {"H-0","H-0","D-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-5
            {"H-0","D-0","D-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-6
            {"S-0","D-0","D-0","D-0","D-0","S-0","S-0","H-0","H-0","H-0"}, //A-7
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //A-8
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //A-9
            {"P-0","P-0","P-0","P-0","P-0","P-0","P-0","P-0","P-0","H-0"}, //A-A
            {"P-0","P-0","P-0","P-0","P-0","P-0","H-0","H-0","H-0","H-0"}, //2-2
            {"P-0","P-0","P-0","P-0","P-0","P-0","H-0","H-0","H-0","H-0"}, //3-3
            {"H-0","H-0","H-0","P-0","P-0","H-0","H-0","H-0","H-0","H-0"}, //4-4
            {"D-0","D-0","D-0","D-0","D-0","D-0","D-0","D-0","H-0","H-0"}, //5-5
            {"P-0","P-0","P-0","P-0","P-0","H-0","H-0","H-0","H-0","H-0"}, //6-6
            {"P-0","P-0","P-0","P-0","P-0","P-0","H-0","H-0","H-0","H-0"}, //7-7
            {"P-0","P-0","P-0","P-0","P-0","P-0","P-0","P-0","H-0","U-0"}, //8-8
            {"P-0","P-0","P-0","P-0","P-0","S-0","P-0","P-0","S-0","S-0"}, //9-9
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //10-10
    };

    private static final String[][] basicStrategy = {
            // 2     3     4     5     6     7     8     9    10     A
            {"H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0"}, //5
            {"H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0"}, //6
            {"H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0"}, //7
            {"H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0"}, //8
            {"H-0","D-0","D-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //9
            {"D-0","D-0","D-0","D-0","D-0","D-0","D-0","D-0","H-0","H-0"}, //10
            {"D-0","D-0","D-0","D-0","D-0","D-0","D-0","D-0","D-0","H-0"}, //11
            {"H-0","H-0","S-0","S-0","S-0","H-0","H-0","H-0","H-0","H-0"}, //12
            {"S-0","S-0","S-0","S-0","S-0","H-0","H-0","H-0","H-0","H-0"}, //13
            {"S-0","S-0","S-0","S-0","S-0","H-0","H-0","H-0","H-0","H-0"}, //14
            {"S-0","S-0","S-0","S-0","S-0","H-0","H-0","H-0","H-0","H-0"}, //15
            {"S-0","S-0","S-0","S-0","S-0","H-0","H-0","H-0","H-0","H-0"}, //16
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //17
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //18
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //19
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //20
            {"H-0","H-0","H-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-2
            {"H-0","H-0","H-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-3
            {"H-0","H-0","D-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-4
            {"H-0","H-0","D-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-5
            {"H-0","D-0","D-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-6
            {"S-0","D-0","D-0","D-0","D-0","S-0","S-0","H-0","H-0","H-0"}, //A-7
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //A-8
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //A-9
            {"P-0","P-0","P-0","P-0","P-0","P-0","P-0","P-0","P-0","H-0"}, //A-A
            {"P-0","P-0","P-0","P-0","P-0","P-0","H-0","H-0","H-0","H-0"}, //2-2
            {"P-0","P-0","P-0","P-0","P-0","P-0","H-0","H-0","H-0","H-0"}, //3-3
            {"H-0","H-0","H-0","P-0","P-0","H-0","H-0","H-0","H-0","H-0"}, //4-4
            {"D-0","D-0","D-0","D-0","D-0","D-0","D-0","D-0","H-0","H-0"}, //5-5
            {"P-0","P-0","P-0","P-0","P-0","H-0","H-0","H-0","H-0","H-0"}, //6-6
            {"P-0","P-0","P-0","P-0","P-0","P-0","H-0","H-0","H-0","H-0"}, //7-7
            {"P-0","P-0","P-0","P-0","P-0","P-0","P-0","P-0","H-0","H-0"}, //8-8
            {"P-0","P-0","P-0","P-0","P-0","S-0","P-0","P-0","S-0","S-0"}, //9-9
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //10-10
    };

    private static final String[][] basicStrategyWithCardCounting = {
            // https://pl.wikipedia.org/wiki/Blackjack
            // 2     3     4     5     6     7     8     9    10     A
            {"H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0"}, //5
            {"H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0"}, //6
            {"H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0","H-0"}, //7
            {"H-0","H-0","H+5","H+3","H+1","H-0","H-0","H-0","H-0","H-0"}, //8
            {"H+1","D-1","D-3","D-5","D-0","H+3","H-0","H-0","H-0","H-0"}, //9
            {"D-0","D-0","D-0","D-0","D-0","D-0","D-5","D-2","H+4","H+4"}, //10
            {"D-0","D-0","D-0","D-0","D-0","D-0","D-0","D-5","D-5","H+1"}, //11
            {"H+3","H+2","S-0","S-2","S-1","H-0","H-0","H-0","H-0","H-0"}, //12
            {"S-1","S-2","S-4","S-5","S-5","H-0","H-0","H-0","H-0","H-0"}, //13
            {"S-4","S-5","S-0","S-0","S-0","H-0","H-0","H-0","H-0","H-0"}, //14
            {"S-0","S-0","S-0","S-0","S-0","H-0","H-0","H-0","H+4","H-0"}, //15
            {"S-0","S-0","S-0","S-0","S-0","H-0","H-0","H+5","H+0","H-0"}, //16
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //17
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //18
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //19
            {"S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0","S-0"}, //20
            {"H-0","H-0","H+3","D-0","D-2","H-0","H-0","H-0","H-0","H-0"}, //A-2
            {"H-0","H-0","H+1","D-2","D-5","H-0","H-0","H-0","H-0","H-0"}, //A-3
            {"H-0","H-0","D-1","D-5","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-4
            {"H-0","H+4","D-3","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-5
            {"H+1","D-4","D-0","D-0","D-0","H-0","H-0","H-0","H-0","H-0"}, //A-6
            {"S+0","D-3","D-0","D-0","D-0","S-0","S-0","H-0","H-0","H-0"}, //A-7
            {"S-0","S+5","S+3","S+1","S+1","S-0","S-0","S-0","S-0","S-0"}, //A-8
            {"S-0","S-0","S-0","S+5","S+4","S-0","S-0","S-0","S-0","S-0"}, //A-9
            {"P-0","P-0","P-0","P-0","P-0","P-0","P-0","P-0","P-0","H-0"}, //A-A ???
            {"P-4","P-0","P-0","P-0","P-0","P-0","H-0","H-0","H-0","H-0"}, //2-2
            {"P-0","P-5","P-0","P-0","P-0","P-0","H+4","H-0","H-0","H-0"}, //3-3
            {"H-0","H-0","H+1","P-2","P-5","H-0","H-0","H-0","H-0","H-0"}, //4-4
            {"D-0","D-0","D-0","D-0","D-0","D-0","D-5","D-2","H+4","H+1"}, //5-5
            {"P-2","P-2","P-5","P-0","P-0","H-0","H-0","H-0","H-0","H-0"}, //6-6
            {"P-0","P-0","P-0","P-0","P-0","P-0","H+5","H-0","H-0","H-0"}, //7-7
            {"P-0","P-0","P-0","P-0","P-0","P-0","P-0","P-0","H-0","H-0"}, //8-8
            {"P-3","P-4","P-6","P-0","P-0","S-0","P-0","P-0","S-0","S-0"}, //9-9
            {"S-0","S-0","S+6","S+5","S+4","S-0","S-0","S-0","S-0","S-0"}, //10-10
    };
}
